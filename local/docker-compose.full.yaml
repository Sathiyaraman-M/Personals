name: Personals

services:
  personals:
    container_name: Personals
    hostname: personals
    image: ghcr.io/sathiyaraman-m/personals:latest
    restart: unless-stopped
    ports:
      - "7005:80"
    volumes:
      - "./appsettings.json:/app/appsettings.json"
    environment:
      ASPNETCORE_URLS: http://+:80
    depends_on:
      sql-tools:
          condition: service_completed_successfully
    networks:
      - personals

  sql-server:
    container_name: Personals-SqlServer
    hostname: sql-server
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: unless-stopped
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Password@123"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    volumes:
      - sql-server:/var/opt/mssql
    networks:
      - personals
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Password@123 -Q 'SELECT 1' || exit 1" ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  
  sql-tools:
    container_name: Personals-SqlTools
    hostname: sql-tools
    image: mcr.microsoft.com/mssql-tools:latest
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S sql-server -U sa -P Password@123 -d master -i docker-entrypoint-initdb.d/init.sql;
      echo "All done!";
      '
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      sql-server:
        condition: service_healthy
    networks:
      - personals

networks:
  personals:
    name: personals-shared-network

volumes:
  sql-server:
    name: personals-sql-server-data