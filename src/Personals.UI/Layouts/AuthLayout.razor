@using Personals.UI.Themes
@inherits LayoutComponentBase

<MudThemeProvider Theme="@AppThemes.DefaultTheme" @bind-IsDarkMode="AppThemeService.IsDarkMode" @ref="_themeProvider" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />

<style>
    .background {
        background-image: url("./img/Login_Background.jpeg");
        width: 100%;
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center;
    }
</style>

<div class="relative background">
    <MudPaper Class="rounded-circle absolute" Style="top: 2rem;right: 2rem;">
        <MudToggleIconButton @bind-Toggled="AppThemeService.IsDarkMode" ToggledIcon="@Icons.Material.Filled.LightMode"
                             Icon="@Icons.Material.Filled.DarkMode" Color="Color.Inherit" />
    </MudPaper>
    <MudContainer MaxWidth="MaxWidth.Small" Class="d-flex justify-center align-center" Style="height: 100vh; z-index: 1;">
        <MudPaper Outlined Style="width: 500px;">
            @Body
        </MudPaper>
    </MudContainer>
</div>

@code {
    private MudThemeProvider _themeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            AppThemeService.IsDarkMode = await _themeProvider.GetSystemPreference();
            await _themeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool arg)
    {
        AppThemeService.IsDarkMode = arg;
        StateHasChanged();
        return Task.CompletedTask;
    }
}